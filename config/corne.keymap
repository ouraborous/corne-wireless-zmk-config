/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include "zmk-helpers/helper.h"

&mt {
  flavor = "balanced";
  quick-tap-ms = <175>;
};

&lt {
  flavor = "balanced";
  tapping-term-ms = <200>;
  quick-tap-ms = <175>;
};

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#ifndef LH2
  #define THUMBS LH1 LH0 RH0 RH1         // Thumbs on 34 keys.
#else
  #define THUMBS LH2 LH1 LH0 RH0 RH1 RH2 // Thumbs on 36+ keys.
#endif

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS)                                 \
  ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";            \
               tapping-term-ms = <280>; quick-tap-ms = <QUICK_TAP_MS>;         \
               require-prior-idle-ms = <150>; hold-trigger-on-release;         \
               hold-trigger-key-positions = <TRIGGER_POS>;)

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS) // Left-hand HRMs.
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS) // Right-hand HRMs.

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESCAPE  &kp Q        &kp W         &kp E         &kp R         &kp T          &kp Y    &kp U         &kp I        &kp O         &kp P           &kp BSPC
&kp TAB     &hml LGUI A  &hml LCTRL S  &hml LALT D   &hml LSHFT F  &kp G          &kp H    &hmr RSHFT J  &hmr RALT K  &hmr RCTRL L  &hmr RGUI SEMI  &kp SQT
&caps_word  &kp Z        &kp X         &kp C         &kp V         &kp B          &kp N    &kp M         &kp COMMA    &kp DOT       &kp  FSLH       &kp BSLH
                                        &mo 5  &mo 1  &lt 2 SPACE    &kp RET  &mo 3  &mo 4
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp GRAVE  &sys_reset  &none  &none   &bt BT_SEL 0  &bt BT_CLR_ALL    &kp N0  &kp N1  &kp N2  &kp N3  &none   &trans
&trans     &trans      &none  &none   &none         &none             &none   &kp N4  &kp N5  &kp N6  &trans  &trans
&trans     &trans      &none  &none   &none         &none             &none   &kp N7  &kp N8  &kp N9  &trans  &trans
                              &trans  &trans        &trans            &trans  &trans  &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp GRAVE  &none   &none  &none   &none   &none     &kp INSERT  &kp SCROLLLOCK  &kp PAUSE_BREAK  &none      &none   &kp DELETE
&trans     &trans  &none  &none   &none   &none     &kp LEFT    &kp DOWN        &kp UP           &kp RIGHT  &trans  &trans
&trans     &trans  &none  &none   &none   &none     &kp HOME    &kp PAGE_DOWN   &kp PAGE_UP      &kp END    &trans  &trans
                          &trans  &trans  &trans    &trans      &trans          &trans
            >;
        };

        layer_3 {
            bindings = <
&kp GRAVE  &none   &kp EXCLAMATION  &kp AT_SIGN   &kp POUND  &none     &none   &none   &none   &none  &none   &trans
&trans     &trans  &kp DOLLAR       &kp PERCENT   &kp CARET  &none     &none   &none   &none   &none  &trans  &trans
&trans     &trans  &kp AMPERSAND    &kp ASTERISK  &none      &none     &none   &none   &none   &none  &trans  &trans
                                    &trans        &trans     &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&kp GRAVE  &kp K_SLEEP  &none          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none               &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR_ALL
&trans     &trans       &kp LS(LG(W))  &kp K_VOLUME_DOWN     &kp K_VOLUME_UP       &kp K_MUTE          &none       &none         &none         &none         &trans        &trans
&trans     &trans       &kp K_STOP     &kp K_PREVIOUS        &kp K_NEXT            &kp K_PLAY_PAUSE    &none       &none         &none         &none         &trans        &trans
                                       &trans                &trans                &trans              &trans      &trans        &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &kp EQUAL    &trans  &kp UNDER   &trans    &trans  &kp LBRC  &trans  &kp RBRC  &trans  &trans
&trans  &trans  &kp MINUS    &trans  &kp PLUS    &trans    &trans  &kp LPAR  &trans  &kp RPAR  &trans  &trans
&trans  &trans  &kp K_PASTE  &trans  &kp K_COPY  &trans    &trans  &kp LBKT  &trans  &kp RBKT  &trans  &trans
                             &trans  &trans      &trans    &trans  &trans    &trans
            >;
        };
    };
};
